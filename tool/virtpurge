#!/usr/bin/python3
import sys, argparse, uuid, libvirt, lxml.etree, os, nixvirt

# parse arguments
parser = argparse.ArgumentParser(prog='virtpurge',description='Delete unwanted libvirt objects idempotently.')
parser.add_argument('-v', '--verbose', action='store_true', help='report actions to stderr')
parser.add_argument('--connect', action='store', required=True, metavar='URI', help='connection URI (e.g. qemu:///session)')
parser.add_argument('--type', action='store', required=True, choices = nixvirt.objectTypes, help='object type')
parser.add_argument('--keep', action='store', required=True, metavar='PATH', help='path to file of list of paths to files of XML definitions of libvirt objects to keep')

args = parser.parse_args()

try:
    oc = nixvirt.getObjectConnection(args.connect,args.type,args.verbose)

    allObjects = oc.getAll()

    with open(args.keep,"r") as f:
        keepFiles = f.readlines()

    def getFileUUID(line):
        path = line.rstrip('\n')
        with open(path,"r") as f:
            specDef = f.read()
        specDefXML = lxml.etree.fromstring(specDef)
        return uuid.UUID(specDefXML.find("uuid").text).bytes

    keepUUIDs = set(map(getFileUUID,keepFiles))

    for object in allObjects:
        if object.uuid in keepUUIDs or not object.isPersistent():
            pass
        else:
            object.undefine()

except libvirt.libvirtError as err:
    print ("virtpurge: error:", err, file=sys.stderr)
    sys.exit(1)
